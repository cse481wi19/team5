<?xml version="1.0" encoding="UTF-8"?>
<launch>
    <arg name="map_file" default="$(find uw_cse)/maps/cse2/1/map.yaml" />

    <!-- Kuri motor control, depthsensor, chest LED, and other sensors-->
    <include file="$(find mobile_base_driver)/launch/kuri_drive.launch"/>

    <!-- Kuri's eye camera -->
    <include file="$(find madmux)/launch/madmux_daemon.launch"/>

    <!-- Kuri's face recognition -->
    <include file="$(find vision_bridge)/launch/vision_bridge.launch"/>

    <node name="safety_controller" pkg="kuri_navigation" type="safety_controller" />

    <!-- Autonomous Navigation -->
    <!-- We're using the default Kuri stack for now, which means you'll only be able to
         provide maps in their Cap'n serialized format. It should be possible to take
         oort_mapping out of this stack and replace it with a typical map_server,
         but will require some work to make sure amcl and may_nav come up okay -->
    <include file="$(find kuri_navigation)/launch/may_nav.launch">
        <!--<arg name="map_file" value="$(arg map_file)" />-->
    </include>

    <node name="ava_recognizer" pkg="applications" type="ava_asr_recognizer.py" output="screen">
        <param name="lm" value="$(find applications)/ava_custom_asr/6733.lm"/>
        <param name="dict" value="$(find applications)/ava_custom_asr/6733.dic"/>
        <param name="hmm" value=":default"/>
    </node>

    <node name="ava_voice_cmd" pkg="applications" type="ava_voice_cmd.py" output="screen">
    </node>

</launch>
